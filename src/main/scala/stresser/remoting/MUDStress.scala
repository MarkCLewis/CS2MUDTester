package stresser.remoting

import java.io.BufferedReader
import java.io.InputStreamReader
import java.io.PrintStream
import java.net.ServerSocket

import scala.concurrent.ExecutionContext.Implicits.global
import scala.concurrent.Future

import com.typesafe.config.ConfigFactory

import akka.actor.ActorSystem
import akka.actor.Props
import utility.IOConfig

object MUDStress extends App {

  val system = ActorSystem("MUDStressTest")
  val config = ConfigFactory.load("local")
  val testManager = system.actorOf(Props(StressTestManager()), "StressTestManager")

  Future {
    checkConnections()
  }

  def checkConnections() {
    val ss = new ServerSocket(6666)
    while (true) {
      val sock = ss.accept()
      val in = new BufferedReader(new InputStreamReader(sock.getInputStream()))
      val out = new PrintStream(sock.getOutputStream())
      Future {
        out.println(titleStrs(util.Random.nextInt(titleStrs.length)))
        out.println("Host?")
        val host = in.readLine()
        out.println("Port?")
        val port = in.readLine().toInt
        out.println("Path to config? (enter for default)")
        val ioConfig = in.readLine().trim match {
          case "" => IOConfig("config.xml")
          case path => IOConfig(path)
        }
        testManager ! StressTestManager.EnqueueStressTestInfo(new StressTestInfo(sock, in, out, host, port, ioConfig))
      }
    }
  }

  val titleStrs = Array(
    """
 __  __  __  __  ____     ___  ____  ____  ____  ___  ___    ____  ____  ___  ____ 
(  \/  )(  )(  )(  _ \   / __)(_  _)(  _ \( ___)/ __)/ __)  (_  _)( ___)/ __)(_  _)
 )    (  )(__)(  )(_) )  \__ \  )(   )   / )__) \__ \\__ \    )(   )__) \__ \  )(  
(_/\/\_)(______)(____/   (___/ (__) (_)\_)(____)(___/(___/   (__) (____)(___/ (__)
""","""
 ___ ___  __ __  ___         _____ ______  ____     ___  _____ _____     ______    ___  _____ ______ 
|   |   ||  |  ||   \       / ___/|      ||    \   /  _]/ ___// ___/    |      |  /  _]/ ___/|      |
| _   _ ||  |  ||    \     (   \_ |      ||  D  ) /  [_(   \_(   \_     |      | /  [_(   \_ |      |
|  \_/  ||  |  ||  D  |     \__  ||_|  |_||    / |    _]\__  |\__  |    |_|  |_||    _]\__  ||_|  |_|
|   |   ||  :  ||     |     /  \ |  |  |  |    \ |   [_ /  \ |/  \ |      |  |  |   [_ /  \ |  |  |  
|   |   ||     ||     |     \    |  |  |  |  .  \|     |\    |\    |      |  |  |     |\    |  |  |  
|___|___| \__,_||_____|      \___|  |__|  |__|\_||_____| \___| \___|      |__|  |_____| \___|  |__|
""","""
  __  __     _   _   ____         ____     _____    ____    U _____ u ____    ____          _____  U _____ u ____     _____   
U|' \/ '|uU |"|u| | |  _"\       / __"| u |_ " _|U |  _"\ u \| ___"|// __"| u/ __"| u      |_ " _| \| ___"|// __"| u |_ " _|  
\| |\/| |/ \| |\| |/| | | |     <\___ \/    | |   \| |_) |/  |  _|" <\___ \/<\___ \/         | |    |  _|" <\___ \/    | |    
 | |  | |   | |_| |U| |_| |\     u___) |   /| |\   |  _ <    | |___  u___) | u___) |        /| |\   | |___  u___) |   /| |\   
 |_|  |_|  <<\___/  |____/ u     |____/>> u |_|U   |_| \_\   |_____| |____/>>|____/>>      u |_|U   |_____| |____/>> u |_|U   
<<,-,,-.  (__) )(    |||_         )(  (__)_// \\_  //   \\_  <<   >>  )(  (__))(  (__)     _// \\_  <<   >>  )(  (__)_// \\_  
 (./  \.)     (__)  (__)_)       (__)    (__) (__)(__)  (__)(__) (__)(__)    (__)         (__) (__)(__) (__)(__)    (__) (__)
""","""
 _______           ______     _______ _________ _______  _______  _______  _______   _________ _______  _______ _________
(       )|\     /|(  __  \   (  ____ \\__   __/(  ____ )(  ____ \(  ____ \(  ____ \  \__   __/(  ____ \(  ____ \\__   __/
| () () || )   ( || (  \  )  | (    \/   ) (   | (    )|| (    \/| (    \/| (    \/     ) (   | (    \/| (    \/   ) (   
| || || || |   | || |   ) |  | (_____    | |   | (____)|| (__    | (_____ | (_____      | |   | (__    | (_____    | |   
| |(_)| || |   | || |   | |  (_____  )   | |   |     __)|  __)   (_____  )(_____  )     | |   |  __)   (_____  )   | |   
| |   | || |   | || |   ) |        ) |   | |   | (\ (   | (            ) |      ) |     | |   | (            ) |   | |   
| )   ( || (___) || (__/  )  /\____) |   | |   | ) \ \__| (____/\/\____) |/\____) |     | |   | (____/\/\____) |   | |   
|/     \|(_______)(______/   \_______)   )_(   |/   \__/(_______/\_______)\_______)     )_(   (_______/\_______)   )_(
""","""
   *          (       (                                          
 (  `         )\ )    )\ )   )                 *   )          )  
 )\))(     ( (()/(   (()/(( /((     (        ` )  /(  (    ( /(  
((_)()\    )\ /(_))   /(_))\())(   ))\(  (    ( )(_))))\(  )\()) 
(_()((_)_ ((_|_))_   (_))(_))(()\ /((_)\ )\  (_(_())/((_)\(_))/  
|  \/  | | | ||   \  / __| |_ ((_|_))((_|(_) |_   _(_))((_) |_   
| |\/| | |_| || |) | \__ \  _| '_/ -_|_-<_-<   | | / -_|_-<  _|  
|_|  |_|\___/ |___/  |___/\__|_| \___/__/__/   |_| \___/__/\__|
""","""
   _____   ____ ___________      _________ __                                 ___________              __   
  /     \ |    |   \______ \    /   _____//  |________   ____   ______ ______ \__    ___/___   _______/  |_ 
 /  \ /  \|    |   /|    |  \   \_____  \\   __\_  __ \_/ __ \ /  ___//  ___/   |    |_/ __ \ /  ___/\   __\
/    Y    \    |  / |    `   \  /        \|  |  |  | \/\  ___/ \___ \ \___ \    |    |\  ___/ \___ \  |  |  
\____|__  /______/ /_______  / /_______  /|__|  |__|    \___  >____  >____  >   |____| \___  >____  > |__|  
        \/                 \/          \/                   \/     \/     \/               \/     \/      
""","""
    __  _____  ______     _____ __                         ______          __ 
   /  |/  / / / / __ \   / ___// /_________  __________   /_  __/__  _____/ /_
  / /|_/ / / / / / / /   \__ \/ __/ ___/ _ \/ ___/ ___/    / / / _ \/ ___/ __/
 / /  / / /_/ / /_/ /   ___/ / /_/ /  /  __(__  |__  )    / / /  __(__  ) /_  
/_/  /_/\____/_____/   /____/\__/_/   \___/____/____/    /_/  \___/____/\__/
""","""
  __    __   __    __   _____     ______   _______   __ __      _____  ______  ______    _______     _____  ______   _______   
 /_/\  /\_\ /\_\  /_/\ /\ __/\   / ____/\/\_______)\/_/\__/\  /\_____\/ ____/\/ ____/\ /\_______)\ /\_____\/ ____/\/\_______)\ 
 ) ) \/ ( (( ( (  ) ) )) )  \ \  ) ) __\/\(___  __\/) ) ) ) )( (_____/) ) __\/) ) __\/ \(___  __\/( (_____/) ) __\/\(___  __\/ 
/_/ \  / \_\\ \ \/ / // / /\ \ \  \ \ \    / / /   /_/ /_/_/  \ \__\   \ \ \   \ \ \     / / /     \ \__\   \ \ \    / / /     
\ \ \\// / / \ \  / / \ \ \/ / /  _\ \ \  ( ( (    \ \ \ \ \  / /__/_  _\ \ \  _\ \ \   ( ( (      / /__/_  _\ \ \  ( ( (      
 )_) )( (_(  ( (__) )  ) )__/ /  )____) )  \ \ \    )_) ) \ \( (_____\)____) ))____) )   \ \ \    ( (_____\)____) )  \ \ \     
 \_\/  \/_/   \/__\/   \/___\/   \____\/   /_/_/    \_\/ \_\/ \/_____/\____\/ \____\/    /_/_/     \/_____/\____\/   /_/_/
""","""
███╗   ███╗██╗   ██╗██████╗     ███████╗████████╗██████╗ ███████╗███████╗███████╗    ████████╗███████╗███████╗████████╗
████╗ ████║██║   ██║██╔══██╗    ██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔════╝██╔════╝    ╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝
██╔████╔██║██║   ██║██║  ██║    ███████╗   ██║   ██████╔╝█████╗  ███████╗███████╗       ██║   █████╗  ███████╗   ██║   
██║╚██╔╝██║██║   ██║██║  ██║    ╚════██║   ██║   ██╔══██╗██╔══╝  ╚════██║╚════██║       ██║   ██╔══╝  ╚════██║   ██║   
██║ ╚═╝ ██║╚██████╔╝██████╔╝    ███████║   ██║   ██║  ██║███████╗███████║███████║       ██║   ███████╗███████║   ██║   
╚═╝     ╚═╝ ╚═════╝ ╚═════╝     ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝       ╚═╝   ╚══════╝╚══════╝   ╚═╝
""","""
 ███▄ ▄███▓ █    ██ ▓█████▄      ██████ ▄▄▄█████▓ ██▀███  ▓█████   ██████   ██████    ▄▄▄█████▓▓█████   ██████ ▄▄▄█████▓
▓██▒▀█▀ ██▒ ██  ▓██▒▒██▀ ██▌   ▒██    ▒ ▓  ██▒ ▓▒▓██ ▒ ██▒▓█   ▀ ▒██    ▒ ▒██    ▒    ▓  ██▒ ▓▒▓█   ▀ ▒██    ▒ ▓  ██▒ ▓▒
▓██    ▓██░▓██  ▒██░░██   █▌   ░ ▓██▄   ▒ ▓██░ ▒░▓██ ░▄█ ▒▒███   ░ ▓██▄   ░ ▓██▄      ▒ ▓██░ ▒░▒███   ░ ▓██▄   ▒ ▓██░ ▒░
▒██    ▒██ ▓▓█  ░██░░▓█▄   ▌     ▒   ██▒░ ▓██▓ ░ ▒██▀▀█▄  ▒▓█  ▄   ▒   ██▒  ▒   ██▒   ░ ▓██▓ ░ ▒▓█  ▄   ▒   ██▒░ ▓██▓ ░ 
▒██▒   ░██▒▒▒█████▓ ░▒████▓    ▒██████▒▒  ▒██▒ ░ ░██▓ ▒██▒░▒████▒▒██████▒▒▒██████▒▒     ▒██▒ ░ ░▒████▒▒██████▒▒  ▒██▒ ░ 
░ ▒░   ░  ░░▒▓▒ ▒ ▒  ▒▒▓  ▒    ▒ ▒▓▒ ▒ ░  ▒ ░░   ░ ▒▓ ░▒▓░░░ ▒░ ░▒ ▒▓▒ ▒ ░▒ ▒▓▒ ▒ ░     ▒ ░░   ░░ ▒░ ░▒ ▒▓▒ ▒ ░  ▒ ░░   
░  ░      ░░░▒░ ░ ░  ░ ▒  ▒    ░ ░▒  ░ ░    ░      ░▒ ░ ▒░ ░ ░  ░░ ░▒  ░ ░░ ░▒  ░ ░       ░     ░ ░  ░░ ░▒  ░ ░    ░    
░      ░    ░░░ ░ ░  ░ ░  ░    ░  ░  ░    ░        ░░   ░    ░   ░  ░  ░  ░  ░  ░       ░         ░   ░  ░  ░    ░      
       ░      ░        ░             ░              ░        ░  ░      ░        ░                 ░  ░      ░           
                     ░                                                                                                 
""","""
   _     _      _     _      _     _       _     _      _     _      _     _      _     _      _     _      _     _       _     _      _     _      _     _      _     _   
  (c).-.(c)    (c).-.(c)    (c).-.(c)     (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)     (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)  
   / ._. \      / ._. \      / ._. \       / ._. \      / ._. \      / ._. \      / ._. \      / ._. \      / ._. \       / ._. \      / ._. \      / ._. \      / ._. \   
 __\( Y )/__  __\( Y )/__  __\( Y )/__   __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__   __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__ 
(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._) (_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._) (_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)
   || M ||      || U ||      || D ||       || S ||      || T ||      || R ||      || E ||      || S ||      || S ||       || T ||      || E ||      || S ||      || T ||   
 _.' `-' '._  _.' `-' '._  _.' `-' '._   _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._   _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._ 
(.-./`-'\.-.)(.-./`-'\.-.)(.-./`-'\.-.) (.-./`-`\.-.)(.-./`-'\.-.)(.-./`-`\.-.)(.-./`-'\.-.)(.-./`-`\.-.)(.-./`-`\.-.) (.-./`-'\.-.)(.-./`-'\.-.)(.-./`-`\.-.)(.-./`-'\.-.)
 `-'     `-'  `-'     `-'  `-'     `-'   `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'   `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-' 
""","""
01001101 01010101 01000100  01010011 01110100 01110010 01100101 01110011 01110011  01010100 01100101 01110011 01110100
""","""
   _   _   _     _   _   _   _   _   _     _   _   _   _  
  / \ / \ / \   / \ / \ / \ / \ / \ / \   / \ / \ / \ / \ 
 ( M | U | D ) ( S | t | r | e | s | s ) ( T | e | s | t )
  \_/ \_/ \_/   \_/ \_/ \_/ \_/ \_/ \_/   \_/ \_/ \_/ \_/
""","""
4D 55 44  53 74 72 65 73 73  54 65 73 74
""","""
   __     __) __     __) ______         __                       ______)        
  (, /|  /|  (, /   /   (, /    )   (__/  )                     (, /            
    / | / |    /   /      /    /      / _/_ __   _  _   _         /   _  _  _/_ 
 ) /  |/  |_  /   /     _/___ /_   ) /  (__/ (__(/_/_)_/_)_    ) /  _(/_/_)_(__ 
(_/   '      (___(_   (_/___ /    (_/                         (_/               
""","""
    _/      _/  _/    _/  _/_/_/          _/_/_/    _/                                                  _/_/_/_/_/                      _/      
   _/_/  _/_/  _/    _/  _/    _/      _/        _/_/_/_/  _/  _/_/    _/_/      _/_/_/    _/_/_/          _/      _/_/      _/_/_/  _/_/_/_/   
  _/  _/  _/  _/    _/  _/    _/        _/_/      _/      _/_/      _/_/_/_/  _/_/      _/_/              _/    _/_/_/_/  _/_/        _/        
 _/      _/  _/    _/  _/    _/            _/    _/      _/        _/            _/_/      _/_/          _/    _/            _/_/    _/         
_/      _/    _/_/    _/_/_/        _/_/_/        _/_/  _/          _/_/_/  _/_/_/    _/_/_/            _/      _/_/_/  _/_/_/        _/_/
""","""
-- ..- -..    ... - .-. . ... ...    - . ... -
""","""
  __   __   _     _  _____       _____   _                                _______             _   
 (__)_(__) (_)   (_)(_____)     (_____) (_)_  _      ____  ____  ____    (__ _ __)____  ____ (_)_ 
(_) (_) (_)(_)   (_)(_)  (_)   (_)___   (___)(_)__  (____)(____)(____)      (_)  (____)(____)(___)
(_) (_) (_)(_)   (_)(_)  (_)     (___)_ (_)  (____)(_)_(_)(_)__ (_)__       (_) (_)_(_)(_)__ (_)  
(_)     (_)(_)___(_)(_)__(_)     ____(_)(_)_ (_)   (__)__  _(__) _(__)      (_) (__)__  _(__)(_)_ 
(_)     (_) (_____) (_____)     (_____)  (__)(_)    (____)(____)(____)      (_)  (____)(____) (__
""","""
     _        _        _        _        _        _        _        _        _        _        _        _        _        _        _    
   _( )__   _( )__   _( )__   _( )__   _( )__   _( )__   _( )__   _( )__   _( )__   _( )__   _( )__   _( )__   _( )__   _( )__   _( )__ 
 _|     _|_|     _|_|     _|_|     _|_|     _|_|     _|_|     _|_|     _|_|     _|_|     _|_|     _|_|     _|_|     _|_|     _|_|     _|
(_ M _ (_(_ U _ (_(_ D _ (_(_   _ (_(_ S _ (_(_ T _ (_(_ R _ (_(_ E _ (_(_ S _ (_(_ S _ (_(_   _ (_(_ T _ (_(_ E _ (_(_ S _ (_(_ T _ (_ 
  |_( )__| |_( )__| |_( )__| |_( )__| |_( )__| |_( )__| |_( )__| |_( )__| |_( )__| |_( )__| |_( )__| |_( )__| |_( )__| |_( )__| |_( )__|
""","""
_/\/\______/\/\__/\/\____/\/\__/\/\/\/\/\__________/\/\/\/\/\____/\/\__________________________________________________________/\/\/\/\/\/\____________________________/\/\_____
_/\/\/\__/\/\/\__/\/\____/\/\__/\/\____/\/\______/\/\__________/\/\/\/\/\__/\/\__/\/\____/\/\/\______/\/\/\/\____/\/\/\/\__________/\/\________/\/\/\______/\/\/\/\__/\/\/\/\/\_
_/\/\/\/\/\/\/\__/\/\____/\/\__/\/\____/\/\________/\/\/\/\______/\/\______/\/\/\/\____/\/\/\/\/\__/\/\/\/\____/\/\/\/\____________/\/\______/\/\/\/\/\__/\/\/\/\______/\/\_____
_/\/\__/\__/\/\__/\/\____/\/\__/\/\____/\/\______________/\/\____/\/\______/\/\________/\/\______________/\/\________/\/\__________/\/\______/\/\______________/\/\____/\/\_____
_/\/\______/\/\____/\/\/\/\____/\/\/\/\/\________/\/\/\/\/\______/\/\/\____/\/\__________/\/\/\/\__/\/\/\/\____/\/\/\/\____________/\/\________/\/\/\/\__/\/\/\/\______/\/\/\___
________________________________________________________________________________________________________________________________________________________________________________
""").map("\n" + _ + "\n")
}